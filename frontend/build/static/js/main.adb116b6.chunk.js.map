{"version":3,"sources":["services/index.js","components/home/Home.js","components/home/AllRecipes.js","components/404/NotFound.js","services/service.js","components/auth/SignUp.js","components/auth/LogIn.js","components/profile/Profile.js","components/Footer.jsx","components/home/Random.jsx","components/profile/Account.jsx","components/profile/Activity.jsx","components/profile/MyRecipes.jsx","components/home/Searchbar.js","components/home/Sidebar.jsx","components/ImageUpload.js","components/VideoUpload.js","components/Newrecipe.jsx","components/profile/Uploaded.jsx","components/profile/Liked.jsx","components/profile/Commented.jsx","components/profile/Recent.jsx","App.js","serviceWorker.js","index.js"],"names":["baseURL","styles","fontFamily","textAlign","insideStyles","background","padding","position","top","left","transform","Home","style","className","bgImage","strength","blur","min","max","height","Button","href","Component","service","axios","create","withCredentials","actions","isLoggedIn","a","get","signUp","user","post","logIn","logOut","allRecipes","newRecipe","recipe","updateRecipe","findRecipeID","deleteRecipe","getRecipeComments","recipeID","getUserComments","userID","newComment","comment","deleteComment","findComment","updateComment","getProfile","newProfile","profile","deleteProfile","findProfileComments","updateProfile","findProfileRecipes","Coverflow","require","AllRecipes","state","allrecipes","title","String","recipes","this","setState","data","console","log","Container","Card","Title","Header","width","displayQuantityOfSide","navigation","enableHeading","map","eachRecipe","key","_id","role","tabIndex","Img","src","image","alt","display","NotFound","SignUp","handleChange","e","target","name","value","handleSubmit","preventDefault","then","props","setUser","initialProfile","UserID","username","firstName","lastName","dietPreference","allergies","activity","catch","err","response","error","type","md","label","icon","group","validate","success","onChange","gradient","onClick","LogIn","window","location","onSubmit","Profile","componentDidMount","myRecipes","id","email","variant","ListGroup","Item","to","class","findMyRecipes","size","block","Footer","color","fluid","Date","getFullYear","Random","info","Axios","res","x","meals","mDish","strCategory","mCategory","mealTags","mIngredients","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strIngredient16","strIngredient17","strIngredient18","strIngredient19","strIngredient20","mMeasurements","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strMeasure16","strMeasure17","strMeasure18","strMeasure19","strMeasure20","strTags","includes","split","newMeal","strMeal","category","dishtype","area","cuisine","strArea","instructions","strInstructions","strMealThumb","tags","video","strYoutube","ingredients","measurements","source","strSource","profileID","created","comments","createRecipe","Subtitle","Body","Text","ListGroupItem","ButtonGroup","aria-label","errorHandler","theFile","newThing","Account","ProfileID","imageUrl","putCategoryInState","categoryArr","push","handleFileUpload","files","uploadData","FormData","append","secure_url","Form","Group","Label","for","Control","aria-describedby","placeholder","Check","Activity","breakpoints","breakpoint","settings","slidesToShow","slidesToScroll","dots","showSides","sidesOpacity","sideSize","scrollOnDevice","MyRecipes","SearchBar","Searchbar","emailID","actionLogout","AddThing","date","toString","Newrecipe","handlePersonTyping","checked","filter","cat","putDishTypeInState","handleIngredientsTyping","ingredientsCopy","handleMeasurementTyping","measurementsCopy","handleInstructionTyping","instructionsCopy","handleTagTyping","tagsCopy","addIngredientRow","addMeasurementRow","addInstructionsRow","addTagRow","deleteInstruction","pop","deleteIngredient","index","splice","deleteMeasurement","deleteTag","Row","as","Col","controlId","eachIngredient","eachMeasurement","eachInstruction","ImageUpload","eachTag","VideoUpload","Uploaded","Liked","Commented","Recent","App","createdAt","updatedAt","Sidebar","pageWrapId","outerContainerId","exact","path","render","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adb116b6.chunk.js","sourcesContent":["//Frontend > src > services > index.js\n//Axios calls 'actions' to backend\n//User: is-logged-in, signUp, logIn, logOut\n//Recipe: allRecipes, findOne, udpate, create, delete\n//Comment: get all comments for a recipe, create, update, delete, get user comments, find a comment\n//Profile:\n//These action calls to Backend > (app.js) > routes \n\n\nimport axios from 'axios';\n\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  //? (baseURL = 'here should be your production endpoint')\n  ? (baseURL = 'https://new-applicatio.herokuapp.com')\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  //auth routes for user actions\n  //Checks to see if user logged in still\n  isLoggedIn: async () => {\n    return await service.get('/auth/is-logged-in')\n  },\n  //Signs up user\n  signUp: async (user) => {\n    return await service.post('/auth/signup', user)\n  },\n  //Logs user in\n  logIn: async (user) => {\n    return await service.post('/auth/login', user)\n  },\n  //Logs user out\n  logOut: async () => {\n    return await service.get('/auth/logout')\n  },\n  \n  //recipe actions\n  //get all recipes\n  allRecipes: async () => {\n    return await service.get('/recipe/allrecipes')\n  },\n  //create new recipe\n  newRecipe: async (recipe) => {\n    return await service.post('/recipe/new', recipe)\n  },\n  //update existing recipe\n  updateRecipe: async (recipe) => {\n    return await service.post('/recipe/update', recipe)\n  },\n  //find a recipe and show details\n  findRecipeID: async (recipe) => {\n    return await service.get(`/recipe/recipe/${recipe}`)\n  },\n  // //find a recipe and show details\n  // findRecipeName: async (recipe) => {\n  //   console.log(recipe)\n  //   await service.get('/recipe/findRecipe',recipe)\n    \n  //   return await service.post('/recipe/new',recipe)\n\n  // },\n  //delete a recipe\n  deleteRecipe: async (recipe) => {\n    return await service.post('/recipe/delete', recipe)\n  },\n  \n  //comment actions\n  //get all comments for a recipe\n  getRecipeComments: async (recipeID) => {\n    return await service.get (`/comment/comment/${recipeID}`)\n  },\n  //get the users comments\n  getUserComments: async (userID) => {\n    return await service.get (`/comment/comment/${userID}`)\n  },\n  //add new comments\n  newComment: async (comment) => {\n    return await service.post('/comment/new', comment)\n  },\n  //delete a comment\n  deleteComment: async (comment) => {\n    return await service.post('/comment/delete', comment)\n  },\n  //find a comment and show details\n  findComment: async (comment) => {\n    return await service.get(`/comment/${comment}`)\n  },\n  //update a comment \n  updateComment: async (comment) => {\n    return await service.post('/comment/update', comment)\n  },\n  //profile actions\n  //get profile for user signed in\n  getProfile: async (userID) => {\n    return await service.get (`/profile/profile/${userID}`)\n  },\n  //add new Profile\n  newProfile: async (profile) => {\n    return await service.post('/profile/new', profile)\n  },\n  //delete a Profile\n  deleteProfile: async (profile) => {\n    return await service.post('/profile/delete', profile)\n  },\n  //find a comment and show details\n  findProfileComments: async (profile) => {\n    return await service.get(`/profile/activity`, profile)\n  },\n  //update a comment \n  updateProfile: async (profile) => {\n    return await service.post('/profile/update', profile)\n  },\n  //find a comment and show details\n  findProfileRecipes: async (userID) => {\n    return await service.get('/profile/myRecipes', userID)\n  },\n  \n};\n\nexport default actions;\n","import React, { Component } from 'react';\nimport { Parallax } from \"react-parallax\";\nimport { Button } from 'react-bootstrap';\n// import Footer from '../Footer';\n// import Searchbar from './Searchbar';\n// import actions from '../../services/index'\n\n\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\nconst insideStyles = {\n  background: \"white\",\n  padding: 20,\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%,-50%)\"\n};\nconst image1 =\n  \"http://blog.hdwallsource.com/wp-content/uploads/2015/01/italian-food-wallpaper-hd-44478-45604-hd-wallpapers.jpg\";\nconst image2 =\n  \"https://blog.hdwallsource.com/wp-content/uploads/2016/03/pasta-dish-wallpaper-50268-51956-hd-wallpapers.jpg\";\nconst image3 =\n  \"https://s-media-cache-ak0.pinimg.com/originals/6d/0e/e0/6d0ee03a21b8eac01290eabc55b0de33.jpg\";\nconst image4 =\n  \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimages2.alphacoders.com%2F201%2Fthumb-1920-201292.jpg&f=1&nofb=1\";\n\nclass Home extends Component {\n  async componentDidMount() {\n    //actions.test()\n  }\n  render() {\n    return (\n      <div>\n        <div style={styles}>\n        <p className=\"para-title\">Recipe Box</p>\n    <Parallax bgImage={image1} strength={500} blur={{ min: -1, max: 3 }}>\n      <div style={{ height: 500 }}>\n        \n      </div>\n    </Parallax>\n    <blockquote className=\"para-div\">“You have to be a romantic to invest yourself, your money, and your time in cheese.”\nMedium Raw: A Bloody Valentine to the World of Food and the People Who Cook <br></br><br></br>\n― Anthony Bourdain</blockquote>\n    <Parallax bgImage={image2}  strength={500} blur={{ min: -1, max: 3 }}>\n      <div style={{ height: 500 }}>\n        {/* <div style={insideStyles}>Dynamic Blur</div> */}\n      </div>\n    </Parallax>\n    <blockquote className=\"para-div\">\n   \"I cook, I create, I'm incredibly excited by what I do, I've still got a lot to achieve.\" <br></br><br></br>\n\n    ― Gordon Ramsay\n    </blockquote>\n    <Parallax bgImage={image3}  strength={500} blur={{ min: -1, max: 3 }}>\n      <div style={{ height: 500 }}>\n        {/* <div style={insideStyles}>Reverse direction</div> */}\n      </div>\n    </Parallax>\n    <blockquote className=\"para-div\">\"A chef is a mixture maybe of artistry and craft. You have to learn the craft really to get there.\"<br></br><br></br>\n\n    ― Wolfgang Puck</blockquote>\n    <Parallax bgImage={image4}  strength={500} blur={{ min: -1, max: 3 }}>\n      <div style={{ height: 500 }}>\n      <Button href=\"/myrecipes\" className=\"btn-secondary\" style={insideStyles}>Start Cooking</Button>\n        {/* <div style={insideStyles}>renderProp</div> */}\n      </div>\n    </Parallax>\n    </div>\n    </div>\n    );\n  }\n}\n\nexport default Home;\n ","import actions from '../../services/index';\nimport React, { Fragment, Component } from 'react';\nimport { Container, Card, } from 'react-bootstrap';\n\n\n\nvar Coverflow = require('react-coverflow');\n\n\nclass AllRecipes extends Component {\n    //still looking into more ideas\n    //need state sent to be sent\n   state = {\n      allrecipes:[],\n      title: String\n   }\n\n    async componentDidMount() {\n        let recipes = await actions.allRecipes()\n        this.setState({\n            allrecipes: recipes.data,\n            title: recipes.data[0].title\n        })\n        console.log(recipes)\n    }\n\n  \n\n\n\n    render() {\n        \n        return (\n            <Container className=\"home-recipe\">\n            <Card>\n                <Card.Title>\n                <Card.Header>Allrecipes</Card.Header>\n                </Card.Title>\n                <div>\n                <Coverflow\n                    width={960}\n                    height={480}\n                    displayQuantityOfSide={2}\n                    navigation={false}\n                    enableHeading={false}\n                >\n                    \n                    {this.state.allrecipes.map(eachRecipe => {\n                    return (<Fragment>\n                        <Card key={eachRecipe._id}\n                    // {/* // onClick={() => fn()}\n                    // // onKeyDown={() => fn()} */}\n                    role=\"menuitem\"\n                    tabIndex=\"0\"\n                    >\n                        <Card.Title className=\"text-center\">{eachRecipe.title}</Card.Title>\n                        <Card.Img\n                            src={eachRecipe.image}\n                            alt={eachRecipe.title}\n                            style={{ display: 'block', width: '100%' }}\n                        />\n                        </Card>\n                        </Fragment>)\n                        })}\n                        \n                    \n                    \n                </Coverflow>\n                \n                </div>\n            </Card>\n            </Container>\n        );\n    }\n}\n\nexport default AllRecipes;","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div className=\"errorPage\">\n      <div className=\"error\">404</div>\n      <br /><br />\n      <span className=\"info\">Page not found</span>\n      <img src=\"http://images2.layoutsparks.com/1/160030/too-much-tv-static.gif\" className=\"static\" alt=\"404\"/>\n      \n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\n\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  //? (baseURL = 'here should be your production endpoint')\n  ? (baseURL = 'https://new-applicatio.herokuapp.com')\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst errorHandler = err => {\n  // console.error(err);\n  throw err;\n};\n\nexport default {\n  service,\n\n  async handleUpload (theFile) {\n    // console.log('file in service: ', theFile)\n    return service.post('/api/upload', theFile)\n      .then(res => res.data)\n      .catch(errorHandler);\n  },\n\n  async handleUploadVideo (theFile) {\n    console.log('file in service: ', theFile)\n    return service.post('/api/uploadvideo', theFile)\n      .then(res => res.data)\n      .catch(errorHandler);\n  },\n\n  async saveNewThing (newThing) {\n    // console.log('new thing is: ', newThing)\n    return service.post('/things/create', newThing)\n      .then(res => res.data)\n      .catch(errorHandler);\n  }\n\n}","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBAnimation } from 'mdbreact';\nimport { MDBBtn } from \"mdbreact\";\n\nclass SignUp extends Component {\n    state = {\n\n    } \n    handleChange = e => {\n        console.log(this.state, e.target.name)\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n            actions.signUp(this.state).then(user=> {\n                this.props.setUser({...user.data})\n                console.log(user.data)\n                let initialProfile={\n                    UserID: user.data._id,\n                    username: '',\n                    firstName: '', \n                    lastName: '',\n                    image: '',\n                    dietPreference: 'None',\n                    allergies: [],\n                    recipes: [],\n                    activity: []\n                } \n                actions.newProfile(initialProfile).then(profile=>{\n                    console.log('profile success',profile)\n                }).catch(({err}) => console.log(err))\n            }).catch(({ response }) => console.error(response));\n    }\n    render() {\n        return (\n            <div className=\"signup_bg\">\n                <Fragment>\n                <MDBAnimation type=\"bounce\">\n                    <MDBContainer>\n                        <MDBRow>\n                        <MDBCol md=\"12\">\n                            <form className=\"auth-styles\">\n                            \n                            <p className=\"h2 text-center mb-4\">Sign Up</p>\n                            \n                            <div className=\"grey-text\">\n                                <MDBInput name=\"email\" label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n                                success=\"right\" onChange={this.handleChange}/>\n                                <MDBInput name=\"password\" label=\"Type your password\" icon=\"lock\" group type=\"password\" validate onChange={this.handleChange}/>\n                            </div>\n                        <div className=\"text-center\">\n                        <MDBBtn gradient=\"peach\" onClick={this.handleSubmit}>Sign Up</MDBBtn>\n                        </div>\n                        </form>\n                    </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n                </MDBAnimation>\n                    {/*....old sign up form.... <form onSubmit={this.handleSubmit}>\n                        <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                        <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                        <input type=\"submit\" value=\"Sign Up\"/>\n                    </form> */}\n                </Fragment>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBAnimation } from 'mdbreact';\n\n\nclass LogIn extends Component {\n\n    state = {\n\n    } \n    handleChange = e => {\n        console.log(e.target.name,e.target.value, '?????')\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n         actions.logIn(this.state).then(user => {\n            this.props.setUser({...user.data}) \n            window.location.href = \"http://localhost:3000/myRecipes\" \n        }).catch(({ response }) => {\n            if (response.data===\"Unauthorized\"){\n                console.log('error loading')\n            }\n        })\n    \n}\n    render() {\n        return (\n\n            \n\n            \n            <Fragment>\n            <div className=\"login_bg\">\n            <MDBAnimation type=\"bounce\">\n                <MDBContainer>\n                    <MDBRow>\n                    <MDBCol md=\"12\">\n                        <form className=\"auth-styles\" onSubmit={this.handleSubmit}>\n                        \n                        <p className=\"h2 text-center mb-4\">Login</p>\n                        \n                        <div className=\"grey-text\">\n                        <form>\n                            <MDBInput name=\"email\" label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\n                            success=\"right\" onChange={this.handleChange} />\n                            <MDBInput name=\"password\" label=\"Type your password\" icon=\"lock\" group type=\"password\" validate onChange={this.handleChange}/>\n                        </form>\n                        </div>\n                    <div className=\"text-center\">\n                    \n                    <MDBBtn gradient=\"peach\" type=\"submit\">Login</MDBBtn>\n                  \n                    </div>\n                    </form>\n                </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            </MDBAnimation>\n                {/* here's the old login form.... <h2>LogIn</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                    <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Log In\"/>\n                </form> */}\n                </div>\n            </Fragment>\n          \n           \n            \n           \n    \n            \n        );\n    }\n}\n\nexport default LogIn;","//Need to make this page a class (done)\n//add axios call for profile routes\n//button onclick method to save profile changes\n//onClick of myrecipes > axios route needed for myrecipes in profile model array\n\nimport React, { Component } from 'react';\nimport actions from '../../services/index'\nimport { Container, Card, ListGroup, ListGroupItem,\n    Button, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n// import axios from 'axios';\n\nclass Profile extends Component {\n    \n    findMyRecipes(){\n        console.log(this.props)\n        actions.findProfileRecipes(this.props.user._id).then(myRecipes => \n            console.log('myRecipesReceived', myRecipes)\n        ).catch(({ response }) => \n            \n                console.log('error loading',response)\n            \n        )\n    }\n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n\n    componentDidMount= async () =>{\n    }\n    // }   \n    render (...props){\n        return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\"> {this.props.user.email} | Dashboard </h1>\n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg\" />\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/account\"><Button className=\"settings-button\" ><i class=\"fas fa-user-cog\"></i> Account</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button onClick={this.findMyRecipes()} className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n            </Card.Header>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Current Profile</Card.Header>\n            <Card.Header>\n            <div className=\"prof-avatar\">\n            <Card.Header>\n                <Card.Img className=\"my-avatar\" src=\"https://www.w3schools.com/w3images/avatar2.png\"></Card.Img>\n                </Card.Header>\n                <Card.Header className=\"my-avatar-header\">\n                <ListGroup>\n                    <ListGroup.Item className=\"prof-list-item\">Username: <span className=\"account-info\"> CoolGuy84</span></ListGroup.Item>\n                    <ListGroup.Item className=\"prof-list-item\">First Name: <span className=\"account-info\"> Michael</span></ListGroup.Item>\n                    <ListGroup.Item className=\"prof-list-item\">Last Name: <span className=\"account-info\"> Cooper</span></ListGroup.Item>\n                </ListGroup>\n                <ListGroup>\n                    <ListGroup.Item className=\"prof-list-item\">Dietary Preferences: <span className=\"account-info\">Vegan, Gluten Free</span></ListGroup.Item>\n                    <ListGroup.Item className=\"prof-list-item\">Allergies: <span className=\"account-info\">Peanut</span></ListGroup.Item>\n                </ListGroup>\n                </Card.Header>\n            </div>\n            </Card.Header>\n            <Button type=\"submit\" size=\"lg\" className=\"btn btn-primary account-button\" block><i class=\"fas fa-user-cog\"></i> Account </Button>\n            </Card>\n            \n        \n        </div>\n        \n        \n        </Container>\n        </div>\n        )\n}\n}\n\nexport default Profile;","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst Footer = () => {\n  return (\n    <MDBFooter color=\"indigo\" className=\"font-small darken-3 pt-0\" >\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol md=\"12\" className=\"py-5\">\n          <div className=\"mb-5 flex-center\">\n            <a className=\"fb-ic\" href=\"https://www.facebook.com\">\n              <i className=\"fab fa-facebook-f fa-lg white-text mr-md-5 mr-3 fa-2x\">\n              </i>\n            </a>\n            <a className=\"tw-ic\" href=\"https://www.twitter.com\">\n              <i className=\"fab fa-twitter fa-lg white-text mr-md-5 mr-3 fa-2x\">\n              </i>\n            </a>\n            <a className=\"gplus-ic\" href=\"https://www.google.com\">\n              <i className=\"fab fa-google-plus fa-lg white-text mr-md-5 mr-3 fa-2x\">\n              </i>\n            </a>\n            <a className=\"li-ic\" href=\"https://www.linkedin.com\">\n              <i className=\"fab fa-linkedin-in fa-lg white-text mr-md-5 mr-3 fa-2x\">\n              </i>\n            </a>\n            <a className=\"ins-ic\" href=\"https://www.instagram.com\">\n              <i className=\"fab fa-instagram fa-lg white-text mr-md-5 mr-3 fa-2x\">\n              </i>\n            </a>\n            <a className=\"pin-ic\" href=\"https://www.pinterest.com\">\n              <i className=\"fab fa-pinterest fa-lg white-text fa-2x\"> </i>\n            </a>\n          </div>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    <div className=\"footer-copyright text-center py-3\">\n      <MDBContainer fluid>\n        &copy; {new Date().getFullYear()} Copyright:{\" \"}\n        <a href=\"https://www.RecipeBox.com\"> Recipe Box </a>\n      </MDBContainer>\n    </div>\n  </MDBFooter>\n  );\n}\n\nexport default Footer;","//Can attempt to extract info from object received and if saved send info to create recipe\n\nimport React, { Component } from 'react';\nimport actions from '../../services/index'\nimport { Container, Card, ListGroup, ListGroupItem,Button, ButtonGroup, ButtonToolbar } from 'react-bootstrap';\nimport Footer from '../Footer';\n// import Searchbar from './Searchbar';\nimport Axios from 'axios'\n\n\n\n\n\nclass Random extends Component {\n  state={\n    info: {}\n  }\n  async componentDidMount() {\n    Axios.get('https://www.themealdb.com/api/json/v1/1/random.php').then(res=>{\n      // console.log('frenchy working api',res)\n      let x= res.data.meals[0]\n      console.log('x',x)\n      \n      let mDish='Other'\n      if (x.strCategory=== 'Breakfast'){ mDish='Breakfast'};\n      if (x.strCategory=== 'Dessert') { mDish='Dessert'};\n      if (x.strCategory=== 'Pork') { mDish='Dish'};\n      if (x.strCategory=== 'Chicken') { mDish='Dish'};\n      if (x.strCategory=== 'Beef') { mDish='Dish'};\n      if (x.strCategory=== 'Seafood') { mDish='Dish'};\n  \n      let mCategory='Other'\n      if (x.strCategory=== 'Vegetarian') { mCategory='Vegetarian'};\n      if (x.strCategory=== 'Vegan') { mCategory='Vegan'};\n      if (x.strCategory=== 'Pork') { mCategory='Pork'};\n      if (x.strCategory=== 'Chicken') { mCategory='Chicken'};\n      if (x.strCategory=== 'Beef') { mCategory='Beef'};\n      if (x.strCategory=== 'Seafood') { mCategory='Seafood'};\n  \n      let mIngredients = [\n        x.strIngredient1,\n        x.strIngredient2,\n        x.strIngredient3,\n        x.strIngredient4,\n        x.strIngredient5,\n        x.strIngredient6,\n        x.strIngredient7,\n        x.strIngredient8,\n        x.strIngredient9,\n        x.strIngredient10,\n        x.strIngredient11,\n        x.strIngredient12,\n        x.strIngredient13,\n        x.strIngredient14,\n        x.strIngredient15,\n        x.strIngredient16,\n        x.strIngredient17,\n        x.strIngredient18,\n        x.strIngredient19,\n        x.strIngredient20\n      ]\n      let mMeasurements=[\n        x.strMeasure1,\n        x.strMeasure2,\n        x.strMeasure3,\n        x.strMeasure4,\n        x.strMeasure5,\n        x.strMeasure6,\n        x.strMeasure7,\n        x.strMeasure8,\n        x.strMeasure9,\n        x.strMeasure10,\n        x.strMeasure11,\n        x.strMeasure12,\n        x.strMeasure13,\n        x.strMeasure14,\n        x.strMeasure15,\n        x.strMeasure16,\n        x.strMeasure17,\n        x.strMeasure18,\n        x.strMeasure19,\n        x.strMeasure20\n      ]\n      \n      let mealTags\n      if (x.strTags===null){\n        mealTags=[]\n      }else if (x.strTags.includes(\",\")){\n        mealTags=x.strTags.split(\",\")\n      }else{\n        mealTags=x.strTags\n      }\n\n\n      let newMeal={\n      title: x.strMeal,\n      category: mCategory,\n      dishtype: mDish,\n      area: \"\",\n      cuisine: x.strArea,\n      instructions: x.strInstructions,\n      image: x.strMealThumb,\n      tags: mealTags,\n      video: x.strYoutube,\n      ingredients: mIngredients,\n      measurements: mMeasurements,\n      source: x.strSource,\n      profileID: \"\",\n      created: \"\",\n      comments: []\n      }\n      \n     \n      let createRecipe = actions.newRecipe(newMeal)\n      this.setState({info: newMeal})\n      console.log('finished creating newMeal',createRecipe )\n      \n    })\n\n  }\n\n  // handleSave=()=>{\n  //     let newRecipe = actions.newRecipe(this.state )\n  //       this.setState({info: newRecipe})\n  //       console.log('finished creating newMeal',newRecipe )\n  // }\n  \n  render() {\n    console.log(this.state.info)\n    console.log(this.state.title)\n    return (\n      <div>\n        <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" style={{ width: '100%' }}>\n          <Card.Header>\n          <Card.Title className=\"text-center main-card-title\" >{this.state.info.title}</Card.Title>\n          </Card.Header>\n          <Card.Subtitle className=\"mb-2 text-muted main-card-subtitle text-center\">Dish Type: {this.state.info.category}  | Area: {this.state.info.area}   |   Tags: {this.state.info.tags}</Card.Subtitle>\n          <Card.Header>\n              <Card.Img className= \"main-card-image\" variant=\"top\" src={this.state.info.image} />\n          </Card.Header>\n              <Card.Body>\n                <Card.Header>\n                <Card.Text>\n                <ListGroup>\n                <ListGroupItem>\n                </ListGroupItem>\n                <ListGroupItem className=\"main-card-instructions\">\n                {this.state.info.instructions}\n                </ListGroupItem>\n                </ListGroup>\n                </Card.Text>\n              </Card.Header>\n              </Card.Body>\n              <Card.Header>\n              <ListGroup className=\"list-group-flush text-center\">\n                <ListGroupItem className=\"main-card-subtitle prep-time\">Prep Time - 10 Minutes |\n                Cook Time - 20 Minutes |\n                Ready In - 30 Mintues</ListGroupItem>\n              </ListGroup>\n              </Card.Header>\n              <Card.Body>\n                <Card>\n                <Card.Header>\n                  <ButtonGroup className=\"btn-group\" aria-label=\"Basic example\">\n                    <Button variant=\"secondary\" name=\"save-btn\" size=\"lg\"><i className=\"far fa-heart\"></i></Button>\n                    <Button variant=\"secondary\" name=\"like-btn\" size=\"lg\"><i className=\"far fa-thumbs-up\"></i></Button>\n                    <Button variant=\"secondary\" name=\"dislike-btn\" size=\"lg\"><i className=\"far fa-thumbs-down\"></i></Button>\n                    <Button variant=\"secondary\" name=\"youtube-btn\" size=\"lg\"><a  href={this.state.info.video} className=\"main-card-source\"><i class=\"fab fa-youtube-square\"></i></a></Button>\n                    <Button variant=\"secondary\" name=\"source-btn\" size=\"lg\"><a  href={this.state.info.source} className=\"main-card-source\"><i  class=\"fas fa-external-link-alt\"></i></a></Button>\n                    <Button variant=\"secondary\" name=\"edit-recipe\" size=\"lg\">Edit Recipe</Button>\n                  </ButtonGroup>\n                  </Card.Header>\n                \n                </Card>\n              </Card.Body>\n            </Card>\n            \n        </Container>\n        \n      </div>\n    );\n  }\n}\n\nexport default Random;\n ","import React, { Component } from 'react';\nimport service from '../../services/service';\nimport { Container, Card, ListGroup, Button, Form } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nclass Account extends Component {\n    state = {\n        title: \"\",\n        category: [],\n        dishtype:\"Breakfast\",\n        cuisine:\"\",\n        ingredients: [\"\"],\n        measurements: [\"\"],\n        instructions: [\"\"],\n        image: \"\", \n        video: \"\",\n        tags: [],\n        comments: [], \n        ProfileID: \"\",\n        created: \"\",\n        imageUrl: \"\"\n      }\n\n      putCategoryInState = (e) => {\n        console.log('putCategoryInState is being called')\n        let categoryArr = this.state.category;\n        categoryArr.push(e.target.value)\n        console.log(categoryArr)\n        this.setState({\n            \n            category:categoryArr\n        \n        }) \n    }\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n        \n        service.handleUpload(uploadData)\n        .then(response => {\n            // console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ imageUrl: response.secure_url });\n        })\n        .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n        });\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        service.saveNewThing(this.state)\n        .then(res => {\n            console.log('added: ', res);\n            // here you would redirect to some other page \n        })\n        .catch(err => {\n            console.log(\"Error while adding the thing: \", err);\n        });\n    }  \n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }   \n    render (){\n\n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Preferences | CoolGuy84{this.props.username}</h1>\n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n            </Card.Header>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Preferences</Card.Header>\n            <Card>\n            <Form>\n                <Form.Group>\n                    <Form.Label for=\"exampleInputEmail1\">Change User Preferences </Form.Label>\n                    <Form.Control type=\"username\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"UserHelp\" placeholder=\"Enter New Username\" />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Required. Username must be unique</small>\n                    <Form.Control type=\"firstname\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"FirstNameHelp\" placeholder=\"First Name\" />\n                    <Form.Control type=\"lastname\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"LastNameHelp\" placeholder=\"Last Name\" />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Required</small>\n                </Form.Group>\n                \n                <Form.Group>\n                    <Form.Control type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"4194304\" />\n                    <Form.Control name=\"avatar\" placeholder=\"Upload Avatar Image\" type=\"file\" \n                    onChange={(e) => this.handleFileUpload(e)}/>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Avatar Upload. 4MB Maximum.</small>\n\n                </Form.Group>\n                <Form.Group id=\"categoryGridCheckbox\">\n                <Form.Label>Please Select Any Dietary Restrictions Below</Form.Label>\n                    <Form.Check type=\"checkbox\" label=\"Vegetarian\" value=\"Vegetarian\" name=\"category\" onChange={this.putCategoryInState}/>\n                    <Form.Check type=\"checkbox\" label=\"Vegan\" value=\"Vegan\" onChange={this.putCategoryInState}/>\n                    <Form.Check type=\"checkbox\" label=\"Gluten Free\" value=\"Gluten Free\" onChange={this.putCategoryInState}/>\n                    <Form.Check type=\"checkbox\" label=\"Diary Free\" value=\"Diary Free\" onChange={this.putCategoryInState}/>\n                    <Form.Check type=\"checkbox\" label=\"Preganancy Friendly\" value=\"Pregnancy Friendly\" onChange={this.putCategoryInState}/>\n                    \n                </Form.Group>\n                \n                \n\n                <Button type=\"submit\" size=\"lg\" className=\"btn btn-primary account-button\" block>Submit</Button>\n                \n                </Form>\n            </Card>\n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n        \n    );\n}\n}\nexport default Account;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, ButtonGroup,} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass Activity extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }\n    render(...props){   \n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Activity | CoolGuy84{this.props.email}</h1>\n                \n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Activity\n                <ButtonGroup>\n                <Link to=\"/recent\"> <Button variant=\"secondary\" className=\"settings-button\">Recent</Button></Link>\n                <Link to=\"/liked\"> <Button variant=\"secondary\" className=\"settings-button\">Liked</Button></Link>\n                <Link to=\"/commented\">  <Button variant=\"secondary\" className=\"settings-button\">Commented</Button></Link>\n                    <Link to=\"/uploaded\"> <Button variant=\"secondary\" className=\"settings-button\">Uploaded</Button> </Link>\n\n                </ButtonGroup>\n            </Card.Header>\n            <Card>\n            <Card.Header className=\"recent-views\">Recently Viewed Recipes</Card.Header>\n            <InfiniteCarousel\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n           \n            </Card>\n\n            \n            \n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n    );\n}\n}\n\nexport default Activity;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass MyRecipes extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }   \n    render() {\n        return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Let's Get Cooking, Michael!</h1>\n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg\" />\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Featured Recipes</Card.Header>\n            <div >\n            <InfiniteCarousel\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n            {/* <Card className=\"past-recipe-card\" style={{ width: '33%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card> */}\n            {/* <Card className=\"past-recipe-card\" style={{ width: '33%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card> */}\n            </div>\n        </Card>\n        \n        </div>\n\n        \n        \n        \n        </Container>\n        </div>\n        );\n    }\n}\n\nexport default MyRecipes;","import React, { Component } from 'react';\n// import axios from 'axios';\n\nclass SearchBar extends Component {\n    // state = {\n    //   query: '',\n    //   results: [],\n    //   filteredResults: [],\n    //   test: []\n    // }\n    \n    \n    // getSearchInfo = () => {\n    //     axios.get('https://cors-anywhere.herokuapp.com/https://pro-api.coinmarketcap.com/v1/cryptocurrency/map?CMC_PRO_API_KEY=' )  // + api_key.key  add this to url when ready\n    //     .then(response => {\n    //       console.log(response.data.data)\n    //       this.setState({\n    //           results: response.data.data,\n    //           filteredResults: response.data.data\n    //       })\n    //     })\n    //     .catch(err => console.log(err))   \n    //   }\n      \n\n    // handleInputChange = (e) => {\n    //     // e.preventDefault()\n    //     // console.log(e.target.value, this.state.results)\n    //     let copyResults = [...this.state.results]\n    //     // console.log(copyResults)\n    //     let filterResults = copyResults.filter(eachRecipe => {\n    //         return eachRecipe.name.toLowerCase().includes(e.target.value.toLowerCase())\n    //     })\n\n    //     console.log(filterResults)\n    //  if(filterResults[0]){\n    //     this.setState({\n    //      filteredResults: filterResults[0].name\n    //     })\n    // }\n    // }\n\n    // componentDidMount= async () =>{\n    //     await this.getSearchInfo()\n    // }\n\n    // redirectingTo = (e) => {\n    //     e.preventDefault()\n    //     // console.log(\"hi\")\n    //     this.props.history.push(`/recipe-details/${this.state.filteredResults}`)\n    // }\n   \n    render() {\n        // console.log(this.props)\n      return (\n        <div></div>\n        // <>\n        // <form action={`recipe-details/${this.state.filteredResults}`}>\n        // {/* <form onSubmit={this.redirectingTo}> */}\n        //   <input\n        //     placeholder=\"Search for a Recipe...\"\n        //     ref={input => this.search = input}\n        //     onChange={this.handleInputChange} \n            \n        //   />\n        //   {/* <button onClick={this.redirectingTo} type=\"submit\"> <i className=\"ti-search\"></i></button> */}\n        //   </form>\n        //   {/* <Link to={`/recipe-details/${this.state.filteredResults}`}>Submit</Link> */}\n          \n          \n          \n        //   {/* <Suggestions {...this.state} results={this.state.filteredResults} /> */}\n \n        // </>\n      )\n    }\n   }\n   \n\n\nexport default SearchBar;","import React, { Component } from \"react\";\nimport {Fragment} from 'react';\nimport { scaleRotate as Menu } from \"react-burger-menu\";\nimport Searchbar from './Searchbar'\n\nexport default props => {\n// class Sidebar extends Component {\n//   state={\n//     info: Sidebar\n//   }\n\nconsole.log(props)\n\n  return (\n    // Pass on our props\n    <Fragment>\n        <div className=\"head-div\">\n        <Searchbar />\n        </div>\n    \n    <Menu {...props} >\n\n      <a className=\"menu-item\" href=\"/\"><i class=\"fas fa-home\"></i> Home</a>\n\n      \n        {props.emailID === null ?\n             \n        <Fragment>\n            <a className=\"bm-item  menu-item\" href=\"/sign-up\"><i class=\"fas fa-user-plus\"></i> Sign Up</a>\n            <br></br>\n            <a className=\"bm-item menu-item\" href=\"/log-in\"><i class=\"fas fa-sign-in-alt\"></i> Log In</a>\n        </Fragment>\n        \n        :\n       \n        <Fragment>\n            <a className=\"bm-item menu-item\" href=\"/profile\"><i class=\"fas fa-user-circle\"></i> My Profile</a>\n            <br></br>\n            <a className=\"bm-item menu-item\" href=\"/log-out\" onClick={props.actionLogout}><i class=\"fas fa-sign-out-alt\"></i> Log Out</a>\n        </Fragment>\n      \n        }\n      <a className=\"menu-item\" href=\"/random\">\n      <i class=\"fas fa-random\"></i> Random\n      </a>\n\n      <a className=\"menu-item\" href=\"/new-recipe\"> <i class=\"fas fa-plus-square\"></i> New Recipe\n      </a>\n      \n      <a className=\"menu-item\" href=\"/allrecipes\"><i class=\"fas fa-globe-americas\"></i> All Recipes\n      </a>\n      \n      <br></br>\n      \n      {/* <Searchbar /> */}\n      \n    </Menu>\n    </Fragment>\n  )};\n    \n","import React, { Component } from \"react\";\n\n// import the service file since we need it to send (and get) the data to(from) server\nimport service from '../services/service';\n\nclass AddThing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        //   name: \"\",\n        //   description: \"\",\n          imageUrl: \"\"\n        };\n    }\n    \n    handleChange = e => {  \n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    // this method handles just the file upload\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"imageUrl\", e.target.files[0]);\n        \n        service.handleUpload(uploadData)\n        .then(response => {\n            console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ imageUrl: response.secure_url });\n          })\n          .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n          });\n    }\n\n    // this method submits the form\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        service.saveNewThing(this.state)\n        .then(res => {\n            console.log('added: ', res);\n            // here you would redirect to some other page \n        })\n        .catch(err => {\n            console.log(\"Error while adding the thing: \", err);\n        });\n    }  \n    \n    render() {\n        return (\n          <div>\n            <form onSubmit={e => this.handleSubmit(e)}>\n                {/* <label>Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={ this.state.name } \n                    onChange={ e => this.handleChange(e)} />\n                <label>Description</label>\n                <textarea \n                    type=\"text\" \n                    name=\"description\" \n                    value={ this.state.description } \n                    onChange={ e => this.handleChange(e)} /> */}\n                <input \n                    type=\"file\" \n                    onChange={(e) => this.handleFileUpload(e)} /> \n                <button type=\"submit\">Save new thing</button>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default AddThing;","import React, { Component } from \"react\";\n\n// import the service file since we need it to send (and get) the data to(from) server\nimport service from '../services/service';\n\nclass AddThing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        //   name: \"\",\n        //   description: \"\",\n          video: \"\"\n        };\n    }\n    \n    // handleChange = e => {  \n    //     const { name, value } = e.target;\n    //     this.setState({ [name]: value });\n    // }\n\n    // this method handles just the file upload\n    handleFileUpload = e => {\n        console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n        const uploadData = new FormData();\n        // imageUrl => this name has to be the same as in the model since we pass\n        // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n        uploadData.append(\"imageURL\", e.target.files[0]);\n        \n        service.handleUploadVideo(uploadData)\n        .then(response => {\n            console.log('response is: ', response);\n            // after the console.log we can see that response carries 'secure_url' which we can use to update the state \n            this.setState({ video: response.secure_url });\n          })\n          .catch(err => {\n            console.log(\"Error while uploading the file: \", err);\n          });\n    }\n\n    // this method submits the form\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        service.saveNewThing(this.state)\n        .then(res => {\n            console.log('added: ', res);\n            // here you would redirect to some other page \n        })\n        .catch(err => {\n            console.log(\"Error while adding the thing: \", err);\n        });\n    }  \n    \n    render() {\n        return (\n          <div>\n            <form onSubmit={e => this.handleSubmit(e)}>\n                {/* <label>Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={ this.state.name } \n                    onChange={ e => this.handleChange(e)} />\n                <label>Description</label>\n                <textarea \n                    type=\"text\" \n                    name=\"description\" \n                    value={ this.state.description } \n                    onChange={ e => this.handleChange(e)} /> */}\n                <input \n                    type=\"file\" \n                    onChange={(e) => this.handleFileUpload(e)} /> \n                <button type=\"submit\">Save new thing</button>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default AddThing;","import React, { Component, Fragment } from 'react';\nimport service from '../services/service';\nimport ImageUpload from './ImageUpload.js'\nimport VideoUpload from './VideoUpload.js'\nimport { Button, Form, Col } from 'react-bootstrap'\n\n//below gets current milliseconds elapsed and then converts it to actual date...date is value in created property//\n\nlet milliseconds = Date(); \nlet date = milliseconds.toString();  \n\n////////////////\n\nclass Newrecipe extends Component {\n\n    state = {\n        title: \"\",\n        category: [],\n        dishtype:\"Breakfast\",\n        cuisine:\"\",\n        ingredients: [\"\"],\n        measurements: [\"\"],\n        instructions: [\"\"],\n        image: \"\", \n        video: \"\",\n        tags: [\"\"],\n        comments: [], \n        ProfileID: \"\",\n        created: date,\n        imageUrl: \"\",\n      }\n\n    // handleChange = e => {\n    //   console.log(this.state)\n    //   this.setState({[e.target.name]: e.target.value})\n    // }\n\n    // handleSubmit = e => {\n    //     e.preventDefault()\n    //         actions.newRecipe(this.state)\n    //         .then(recipe=> {\n    //             console.log(recipe) \n    //         }).catch(({ response }) => console.error(response));\n    // }\n    handlePersonTyping = (e) => {\n        console.log(e.target.name, e.target.value);\n        this.setState({\n            \n            \n            \n            [e.target.name]:e.target.value,\n        \n        \n        })\n       \n     }\n\n\n     //handle checkbox functionality \n\n     putCategoryInState = (e) => { \n        console.log(e.target.value, e.target.checked)\n        let categoryArr = [...this.state.category];\n        if(e.target.checked){\n            categoryArr.push(e.target.value)\n            this.setState({\n            \n                        category:categoryArr\n                    \n                }) \n            }\n        else {\n           categoryArr =  categoryArr.filter(cat => {\n               return cat !== e.target.value\n               \n           })\n           this.setState({\n            \n            category:categoryArr\n        \n            }) \n        }\n     }\n\n    /////////////////////////\n\n    putDishTypeInState = (e) => {\n        console.log('putDishTypeInState is being called')\n        console.log(e.target.value)\n        this.setState({\n            \n            dishtype: e.target.value\n        \n        }) \n    }\n\n//I THINK YOU CAN DELETE ALL THIS COMMENTED STUFF.....GO THROUGH IT\n\n    // addIngredientColumn = (e) => {\n    //     <Form.Group controlId=\"Measurments\">\n    //     <Form.Label>Measurments</Form.Label>\n    //     <Form.Control name=\"measurement1\" type=\"text\" placeholder=\"Add your measurments\" onChange={this.handlePersonTyping}/>\n    //     </Form.Group>\n    // }\n\n    // addIngredient = (e) => {\n    //     this.setState({\n            \n    //         dishtype: e.target.value\n        \n    //     }) \n    // }\n\n    // putCuisineInState = (e) => {\n    //     console.log('putCuisineInState is being called')\n    //     console.log(this.state.title)\n    //     this.setState({\n            \n    //         cuisine: e.target.value\n        \n    //     }) \n    // }\n  \n  \n\n\n///HANDLE TYPING FUNCTIONALITY \n\n    handleIngredientsTyping = (e) => {\n        console.log(e.target.name, e.target.value);\n        let ingredientsCopy = [...this.state.ingredients]\n        ingredientsCopy[e.target.name] = e.target.value\n        this.setState({\n            ingredients: ingredientsCopy,\n        })\n     }\n\n     handleMeasurementTyping = (e) => {\n        console.log(e.target.name, e.target.value);\n        let measurementsCopy = [...this.state.measurements]\n        measurementsCopy[e.target.name] = e.target.value\n        this.setState({\n            measurements: measurementsCopy,\n        })\n     }\n\n     handleInstructionTyping = (e) => {\n        console.log(e.target.name, e.target.value);\n        let instructionsCopy = [...this.state.instructions]\n        instructionsCopy[e.target.name] = e.target.value\n        this.setState({\n            instructions: instructionsCopy,\n        })\n     }\n\n     handleTagTyping = (e) => {\n        console.log(e.target.name, e.target.value);\n        let tagsCopy = [...this.state.tags]\n        tagsCopy[e.target.name] = e.target.value\n        console.log(this.state.tags)\n        this.setState({\n            tags: tagsCopy\n        })\n     }\n\n\n///ADDING ROW FUNCTIONALITY \n\n     addIngredientRow = () => {\n         console.log(\"inside add this ingredient\")\n         let ingredientsCopy = [...this.state.ingredients]\n         ingredientsCopy.push(\"\")\n         console.log(ingredientsCopy)\n         this.setState({\n             ingredients: ingredientsCopy\n         })\n     }\n\n     addMeasurementRow = () => {\n        console.log(\"inside add this measurement\")\n        let measurementsCopy = [...this.state.measurements]\n        measurementsCopy.push(\"\")\n        this.setState({\n            measurements: measurementsCopy\n        })\n    }\n\n    addInstructionsRow = () => {\n        console.log(\"inside add this instructions\")\n        let instructionsCopy = [...this.state.instructions]\n        instructionsCopy.push(\"\")\n        console.log(instructionsCopy)\n        this.setState({\n            instructions: instructionsCopy\n        })\n    }\n\n    addTagRow = () => {\n        console.log(\"inside add this tags\")\n        let tagsCopy = [...this.state.tags]\n        tagsCopy.push(\"\")\n        console.log(tagsCopy)\n        this.setState({\n            tags: tagsCopy\n        })\n    }\n\n// DELETING ROW FUNCTIONALITY \n\n    deleteInstruction = () => {\n        console.log(\"inside delete instruction\")\n        let instructionsCopy = [...this.state.instructions]\n        instructionsCopy.pop() //NOTE THAT THIS ONE POPS LAST VALUE OFF THE ARRAY \n        console.log(instructionsCopy)\n        this.setState({\n            instructions: instructionsCopy\n        })\n    }\n\n    //not really sure why the method below works\n\n    deleteIngredient = (e,index) => {\n        e.preventDefault()\n        console.log(\"inside delete ingredient\")\n        let ingredientsCopy = [...this.state.ingredients]\n        ingredientsCopy.splice(index, 1);\n        console.log(ingredientsCopy)\n        this.setState({\n            ingredients: ingredientsCopy\n        })\n    }\n\n    deleteMeasurement = (e,index) => {\n        e.preventDefault()\n        console.log(\"inside delete measurement\")\n        let measurementsCopy = [...this.state.measurements]\n        measurementsCopy.splice(index, 1);\n        console.log(measurementsCopy)\n        this.setState({\n            measurements: measurementsCopy\n        })\n    }\n\n    deleteTag = (e,index) => {\n        e.preventDefault()\n        console.log(\"inside delete tag\")\n        let tagsCopy = [...this.state.tags]\n        tagsCopy.splice(index, 1);\n        console.log(tagsCopy)\n        this.setState({\n            tags: tagsCopy\n        })\n    }\n\n\n//IMAGE AND VIDEO UPLOAD FUNCTIONALITY \n\n\n\n    \n    render() {\n        // console.log(this.state.category)\n        return (\n            <div>\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"Title\">\n                        <Form.Label>Recipe Name</Form.Label>\n                        <Form.Control name=\"title\" type=\"text\" placeholder=\"Enter title\" onChange={this.handlePersonTyping} />\n                        </Form.Group>\n\n                    <Form.Group id=\"categoryGridCheckbox\">\n                    <Form.Label>Category</Form.Label>\n                        <Form.Check type=\"checkbox\" label=\"Vegetarian\" value=\"Vegetarian\" name=\"category\"  onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Vegan\" value=\"Vegan\" onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Pork\" value=\"Pork\" onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Chicken\" value=\"Chicken\" onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Beef\" value=\"Beef\" onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Seafood\" value=\"Seafood\" onChange={this.putCategoryInState}/>\n                        <Form.Check type=\"checkbox\" label=\"Other\" value=\"Other\" onChange={this.putCategoryInState}/>\n                    </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"Ingredients\">\n                        <Form.Label>Ingredients</Form.Label>\n                        {this.state.ingredients.map((eachIngredient, index) => {\n                            return(\n                            <Fragment>\n                            <Form.Control name={index} type=\"text\" placeholder=\"Add your ingredients\"  value={eachIngredient} onChange={this.handleIngredientsTyping}/>\n                            <Button variant=\"secondary\" size=\"sm\" onClick={(e) => this.deleteIngredient(e,index)}>\n                           DELETE INGREDIENT\n                            </Button>\n                            </Fragment>)\n                        })}\n                        <Button variant=\"secondary\" size=\"sm\" onClick={this.addIngredientRow}>\n                            ADD INEGREDIENT\n                        </Button>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"Measurements\">\n                        <Form.Label>Measurements</Form.Label>\n                        {this.state.measurements.map((eachMeasurement, index) => \n                             {\n                            return(\n                            <Fragment>\n                            <Form.Control name={index} type=\"text\" placeholder=\"Add your measurements\" value={eachMeasurement} onChange={this.handleMeasurementTyping}/>\n                            <Button variant=\"secondary\" size=\"sm\" onClick={(e) => this.deleteMeasurement(e,index)}>\n                           DELETE MEASUREMENT\n                            </Button>\n                            </Fragment>)\n                            \n                        })}\n                        <Button variant=\"secondary\" size=\"sm\" onClick={this.addMeasurementRow}>\n                           ADD MEASUREMENT\n                        </Button>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"Instructions\">\n                        <Form.Label>Instructions</Form.Label>\n                        {this.state.instructions.map((eachInstruction, index) => {\n                            return(\n                            <Fragment>\n                            <Form.Control name={index} type=\"text\" placeholder=\"Add your instructions\" onChange={this.handleInstructionTyping}\n                            />\n                             <Button variant=\"secondary\" size=\"sm\" onClick={this.deleteInstruction}>\n                           DELETE INSTRUCTION\n                    </Button>\n                            </Fragment>)\n                        })}\n                    <Button variant=\"secondary\" size=\"sm\" onClick={this.addInstructionsRow}>\n                           ADD INSTRUCTION\n                    </Button>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"Video\">\n                        <Form.Label>Video</Form.Label>\n                        <Form.Control name=\"video\" type=\"text\" placeholder=\"Add your video URL\" onChange={this.handlePersonTyping}/>\n                    </Form.Group>\n\n                    <Form.Row>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Dish Type</Form.Label>\n                        <Form.Control as=\"select\" onChange={this.putDishTypeInState}>\n                            <option>Breakfast</option>\n                            <option>Dish</option>\n                            <option>Snack</option>\n                            <option>Dessert</option>\n                            <option>Other</option>\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridCuisine\">\n                        <Form.Label>Cuisine</Form.Label>\n                        <Form.Control name=\"cuisine\" placeholder=\"ex: American, French, Jamaican\" onChange={this.handlePersonTyping}/>\n                        </Form.Group>\n                    </Form.Row>\n                    \n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"ProfileID\">\n                        <Form.Label>Display Name</Form.Label>\n                        <Form.Control name=\"ProfileID\" type=\"text\" placeholder=\"Add your display name \" onChange={this.handlePersonTyping}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"Image\">\n                        <Form.Label>Image</Form.Label>\n                        <ImageUpload/>\n                        </Form.Group>\n                    </Form.Row>\n        {/* BELOW WHERE TAGS INPUT IS */}\n        <Form.Group controlId=\"Tags\">\n                        <Form.Label>Tags</Form.Label>\n                        {this.state.tags.map((eachTag, index) => \n                             {\n                            return(\n                            <Fragment>\n                            <Form.Control name={index} type=\"text\" placeholder=\"Add your tags\" value={eachTag} onChange={this.handleTagTyping}/>\n                            <Button variant=\"secondary\" size=\"sm\" onClick={(e) => this.deleteTag(e,index)}>\n                           DELETE TAG\n                            </Button>\n                            </Fragment>)\n                            \n                        })}\n                        <Button variant=\"secondary\" size=\"sm\" onClick={this.addTagRow}>\n                           ADD TAG\n                        </Button>\n                    </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                </Form>\n                <VideoUpload/>\n            </div>\n        );\n    }\n}\n\nexport default Newrecipe;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, ButtonGroup,  } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass Uploaded extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // } \n    render(...props){  \n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Activity | CoolGuy84{this.props.email}</h1>\n                \n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Activity\n            <ButtonGroup>\n                <Link to=\"/recent\"> <Button variant=\"secondary\" className=\"settings-button\">Recent</Button></Link>\n                <Link to=\"/liked\"> <Button variant=\"secondary\" className=\"settings-button\">Liked</Button></Link>\n                <Link to=\"/commented\">  <Button variant=\"secondary\" className=\"settings-button\">Commented</Button></Link>\n                    <Link to=\"/uploaded\"> <Button variant=\"secondary\" className=\"settings-button\">Uploaded</Button> </Link>\n\n                </ButtonGroup>\n            </Card.Header>\n            <Card>\n            <Card.Header className=\"recent-views\">Recently Uploaded Recipes</Card.Header>\n            <InfiniteCarousel style={{ width: '100%' }}\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n           \n            </Card>\n\n            \n            \n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n    );\n}\n}\n\nexport default Uploaded;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, ButtonGroup } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass Liked extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }   \n    render (...props){\n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Activity | CoolGuy84{this.props.email}</h1>\n                \n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Activity\n            <ButtonGroup>\n                <Link to=\"/recent\"> <Button variant=\"secondary\" className=\"settings-button\">Recent</Button></Link>\n                <Link to=\"/liked\"> <Button variant=\"secondary\" className=\"settings-button\">Liked</Button></Link>\n                <Link to=\"/commented\">  <Button variant=\"secondary\" className=\"settings-button\">Commented</Button></Link>\n                    <Link to=\"/uploaded\"> <Button variant=\"secondary\" className=\"settings-button\">Uploaded</Button> </Link>\n\n                </ButtonGroup>\n            </Card.Header>\n            <Card>\n            <Card.Header className=\"recent-views\">Recently Liked Recipes</Card.Header>\n            <InfiniteCarousel\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n           \n            </Card>\n\n            \n            \n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n    );\n}\n}\n\nexport default Liked;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, ButtonGroup } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass Commented extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }  \n    render(...props){ \n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Activity | CoolGuy84{this.props.username}</h1>\n                \n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Activity\n            <ButtonGroup>\n                <Link to=\"/recent\"> <Button variant=\"secondary\" className=\"settings-button\">Recent</Button></Link>\n                <Link to=\"/liked\"> <Button variant=\"secondary\" className=\"settings-button\">Liked</Button></Link>\n                <Link to=\"/commented\">  <Button variant=\"secondary\" className=\"settings-button\">Commented</Button></Link>\n                    <Link to=\"/uploaded\"> <Button variant=\"secondary\" className=\"settings-button\">Uploaded</Button> </Link>\n\n                </ButtonGroup>\n            </Card.Header>\n            <Card>\n            <Card.Header className=\"recent-views\">Recently Commented Recipes</Card.Header>\n            <InfiniteCarousel\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n           \n            </Card>\n\n            \n            \n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n    );\n}\n}\n\nexport default Commented;","import React, { Component } from 'react';\nimport { Container, Card, ListGroup, Button, ButtonGroup } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport InfiniteCarousel from 'react-leaf-carousel';\n\nclass Recent extends Component {\n    \n    // if(!props.user.email){ \n    //     props.history.push('/log-in') \n    // }\n    render(){\n    return (\n        <div>\n            {/* Profile\n            Welcome {props.user.email} !!!  */}\n            <Container className=\"home-recipe\">\n          {/* <img className=\"hero-img\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F5446883.jpg&w=596&h=596&c=sc&poi=face&q=85\"></img>\n          <div className=\"hero-recipe\">\n          <h1 className=\"recipe-title\">My Recipe Name</h1>\n          <ul>\n            <li>Step 1 - Boil Water at High Heat</li>\n            <li>Step 2 - Boil Meat for 30 minutes</li>\n            <li>Step 3 - Dice Vegetables into a Juliene Cut</li>\n            <li>Step 4 - Prep Appetizers and Grab a Beer</li>\n          </ul>\n          </div> */}\n          \n          <Card id=\"main-card\" \n          style={{ width: '100%' }}>\n          \n          <Card.Title className=\"text-center\">\n            <Card.Header>\n                <h1 className=\"prof-title\">Account Activity | {this.props.email}</h1>\n                \n            </Card.Header> \n          </Card.Title>\n          <Card.Header>\n          <Card.Img className=\"prof-cover\" variant=\"top\" src=\"http://www.ironchefamerica.tv/us/images/lets-get-cooking.jpg \"/>\n          </Card.Header>\n        </Card>\n        <div className=\"settings\">\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '18rem' }}>\n            <Card.Header>Settings</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/profile\"><Button className=\"settings-button\" ><i class=\"fas fa-user-circle\"></i> Profile</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myrecipes\"><Button className=\"settings-button\" ><i class=\"fas fa-list\"></i> MyRecipes</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/myactivity\"><Button className=\"settings-button\" ><i class=\"fas fa-chart-line\"></i> Activity</Button></Link></ListGroup.Item>\n                <ListGroup.Item className=\"settings-links\"><Link to=\"/log-out\"><Button className=\"settings-button\" ><i class=\"fas fa-sign-out-alt\"></i> Logout</Button></Link></ListGroup.Item>\n            </ListGroup>\n        </Card>\n        <Card className=\"sm-card\" id=\"main-card\" style={{ width: '100%' }}>\n            <Card.Header>Account Activity\n            <ButtonGroup>\n                <Link to=\"/recent\"> <Button variant=\"secondary\" className=\"settings-button\">Recent</Button></Link>\n                <Link to=\"/liked\"> <Button variant=\"secondary\" className=\"settings-button\">Liked</Button></Link>\n                <Link to=\"/commented\">  <Button variant=\"secondary\" className=\"settings-button\">Commented</Button></Link>\n                    <Link to=\"/uploaded\"> <Button variant=\"secondary\" className=\"settings-button\">Uploaded</Button> </Link>\n\n                </ButtonGroup>\n            </Card.Header>\n            <Card>\n            <Card.Header className=\"recent-views\">Recently Viewed Recipes</Card.Header>\n            <InfiniteCarousel style={{ width: '100%' }}\n    breakpoints={[\n      {\n        breakpoint: 500,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n        },\n      },\n    ]}\n    dots={false}\n    showSides={true}\n    sidesOpacity={.5}\n    sideSize={.1}\n    slidesToScroll={1}\n    slidesToShow={2}\n    scrollOnDevice={true}\n  >\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/CcwQeQ4VY7I/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Kitchen Sink Nachos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n      \n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/LIubvcunMBc/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title>Brooklyn Style Pizza</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n    <div>\n    <Card className=\"past-recipe-card\" style={{ width: '100%' }}>\n            <Card.Img variant=\"top\" src=\"https://i.ytimg.com/vi/ZJPpMSx3eSw/hqdefault.jpg\" />\n                <Card.Body>\n                    <Card.Title> Tiquana Street Tacos</Card.Title>\n                    <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                    </Card.Text>\n                    <Button variant=\"secondary\" className=\"settings-button\">View Recipe</Button>\n                </Card.Body>\n            </Card>\n    </div>\n  </InfiniteCarousel>\n           \n            </Card>\n\n            \n            \n           \n            \n        </Card>\n        </div>\n        \n        \n        </Container>\n        </div>\n    );\n}\n}\n\nexport default Recent;","import React, {Component} from 'react';\nimport {  Switch, Route,} from 'react-router-dom';\nimport Home from './components/home/Home';\nimport AllRecipes from './components/home/AllRecipes';\nimport NotFound from './components/404/NotFound.js';\nimport SignUp from './components/auth/SignUp';\nimport LogIn from './components/auth/LogIn';\nimport Profile from './components/profile/Profile';\nimport actions from './services/index';\n\nimport Footer from './components/Footer.jsx';\nimport Random from './components/home/Random'\nimport Account from './components/profile/Account'\nimport Activity from './components/profile/Activity'\nimport MyRecipes from './components/profile/MyRecipes.jsx'\n\nimport Sidebar from './components/home/Sidebar.jsx'\nimport Newrecipe from './components/Newrecipe';\nimport Uploaded from './components/profile/Uploaded';\nimport Liked from './components/profile/Liked';\nimport Commented from './components/profile/Commented';\nimport Recent from './components/profile/Recent';\n\n\nclass App extends Component {\n  \n  state = { \n      email:null, \n      createdAt: null, \n      updatedAt: null, \n      _id: null \n  }\n  \n\n  //*checks if user is logged in and gets a user object response or null from backend auth.js\n  async componentDidMount() {\n    let user = await actions.isLoggedIn()\n    this.setState({...user.data})\n    console.log('coolest ')\n  }\n\n  //*Receives event from prop passed to component Login/SignUp\n  setUser = (user) => this.setState(user)\n  \n  //*method logout on backend in auth.js used to logout user and null object sent to method setUser to logout frontend\n  logOut = async () => {\n    let res = await actions.logOut()\n    this.setUser({\n      email:null, \n      createdAt: null, \n      updatedAt: null, \n      _id: null }) //FIX \n  }\n\n\n\n  // handleChange = e => {\n  //   console.log(this.state)\n  //   this.setState({[e.target.name]: e.target.value})\n  // }\n\n  // handleSubmit = e => {\n  //     e.preventDefault()\n  //         actions.newRecipe(this.state)\n  //         .then(recipe=> {\n  //             console.log(recipe) \n  //         }).catch(({ response }) => console.error(response));\n  // }\n  \n  render(){\n    // console.log(this.state)\n    return (\n      // <form onSubmit={this.handleSubmit}>\n      //   <input type=\"text\" name=\"title\" onChange={this.handleChange}/>\n      //   <input type=\"submit\"/>\n      // </form>\n\n\n\n    <div id=\"App\">\n      <Sidebar props={(this.state)} emailID={this.state.email} pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n    <div id=\"page-wrap\">\n    \n      {/* <Nav>\n        <NavLink to=\"/\">Home |</NavLink>\n  \n        {this.state.email ? \n          <Fragment>\n           <NavLink onClick={this.logOut} to='/'>Log Out |</NavLink> \n           <NavLink to=\"/profile\">Profile|</NavLink>\n           </Fragment>\n           :\n           <Fragment>\n           <NavLink to=\"/sign-up\">Sign Up |</NavLink>\n           <NavLink to=\"/log-in\">Log In |</NavLink>\n           </Fragment>\n          }\n        \n      </Nav> */}\n\n      \n      {/* <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Food-Saver</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/account\">Random Recipe</Nav.Link>\n            \n            <NavDropdown title=\"My Account\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Favorites</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Settings</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Premium</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n\n          <Searchbar />\n\n          <Nav>\n            <Nav.Link href=\"/log-in\">Log In</Nav.Link>\n            <Nav.Link eventKey={2} href=\"/sign-up\">\n              Sign Up\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar> */}\n\n      \n      \n    \n      <Switch>\n        <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n        <Route exact path=\"/\" render={(props) => <Sidebar {...props} />} />\n        <Route exact path=\"/profile\" render={(props) => <Profile {...props} user={this.state}/>} />\n        <Route exact path=\"/allrecipes\" render={(props) => <AllRecipes {...props} user={this.state}/>} />\n        <Route exact path=\"/random\" render={(props) => <Random {...props} />} />\n        <Route exact path=\"/sign-up\" render={(props)=><SignUp {...props} setUser={this.setUser} />} />\n        <Route exact path=\"/log-in\" render={(props) => <LogIn {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/log-out\" render={(props) => <Home {...props} actionLogout= {this.logOut()}  />} />\n        <Route exact path=\"/account\" render={(props) => <Account {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/uploaded\" render={(props) => <Uploaded {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/liked\" render={(props) => <Liked {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/recent\" render={(props) => <Recent {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/commented\" render={(props) => <Commented {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/myrecipes\" render={(props) => <MyRecipes {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/myactivity\" render={(props) => <Activity {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/new-recipe\" render={(props) => <Newrecipe {...props} user={this.state}/>} />\n        \n        \n        <Route component={NotFound} />\n      </Switch>\n      <Footer />\n      </div>\n      </div>\n  );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n<App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}